buildscript {
    repositories {
        mavenCentral()
        maven { url = "https://files.minecraftforge.net/maven" }
        maven {
            name = 'sponge'
            url = 'https://repo.spongepowered.org/maven'
        }
        repositories {
            maven {
                url "https://plugins.gradle.org/m2/"

            }
        }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '4.+', changing: true
        classpath 'org.spongepowered:mixingradle:0.7-SNAPSHOT'
    }
}

//Gradle Plugins
plugins {
    id 'java'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'
apply plugin: 'maven-publish'
apply plugin: 'org.spongepowered.mixin'

compileJava.options.encoding = 'UTF-8'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}


//Build variables
version = "1.0"
group = "com.iterator.beubassclientmod"
archivesBaseName = "beubassclientmod"


//Gradle Repositories
repositories {
    maven { url 'https://jitpack.io' }
    maven {
        name = 'sponge'
        url = 'https://repo.spongepowered.org/maven'
    }
    maven { url "https://nexus.vankka.dev/repository/maven-public/" }
    maven { url "https://repository.dev.gotan.io/repository/gotan.os/" }
    maven { url "https://repo.opencollab.dev/maven-snapshots" }
    maven { url "https://repo.opencollab.dev/maven-releases" }
    maven {
        name = 'sonatype-oss'
        url = 'https://oss.sonatype.org/content/repositories/snapshots/'
    }
    maven{
        name = 'howaner'
        url = "https://repo.howaner.de/"
    }
}

//Forge
minecraft {
    mappings channel: 'official', version: '1.16.5'
    runs {
        client {
            workingDirectory project.file('runClient')

            // Recommended logging data for a userdev environment
            // The markers can be added/removed as needed separated by commas.
            // "SCAN": For mods scan.
            // "REGISTRIES": For firing of registry events.
            // "REGISTRYDUMP": For getting the contents of all registries.
            property 'forge.logging.markers', 'REGISTRIES'

            // Recommended logging level for the console
            // You can set various levels here.
            // Please read: https://stackoverflow.com/questions/2031163/when-to-use-the-different-log-levels
            property 'forge.logging.console.level', 'debug'

            arg "-mixin.config=beubassclientmod.mixins.json"

            mods {
                beubassclientmod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'
            mods {
                beubassclientmod {
                    source sourceSets.main
                }
            }
        }
    }
}


//ShadowJar
configurations {
    embed
    compileOnly.extendsFrom(embed)
}

//Dependencies
dependencies {

    // =========  Minecraft Forge =============
    minecraft 'net.minecraftforge:forge:1.16.5-36.1.66'

    //Mixin
    annotationProcessor 'org.spongepowered:mixin:0.8.2:processor'
}


//Mixin
mixin {
    add sourceSets.main, 'beubassclientmod.refmap.json'
}

//Manifest attributes
jar {
    classifier = "1.16"
    manifest {
        attributes([
                'Maven-Artifact'          : "${project.group}:${project.archivesBaseName}:${project.version}",
                'Timestamp'               : System.currentTimeMillis(),
                "Specification-Title"     : "beubassclientmod",
                "Specification-Vendor"    : "beubassclientmod",
                "Specification-Version"   : "1", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "beubassclientmod",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                'MixinConnector'          : 'com.iterator.beubassclientmod.MixinConnector'
        ])
    }
}
